[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rd-burndown"
version = "0.1.0"
description = "Redmine工数ベース・バーンダウンCLIツール"
authors = [{name = "redmine-burndown", email = "dev@example.com"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.11"
dependencies = [
    "typer>=0.9.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "pandas>=2.0.0",
    "plotly>=5.15.0",
    "kaleido>=0.2.1",
    "jpholiday>=0.1.8",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "requests>=2.32.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.0.280",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "types-pyyaml",
    "types-requests",
    "lizard",
]
build = [
    "pyinstaller>=5.13.0",
]

[project.scripts]
rd-burndown = "rd_burndown.cli:main_entry"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.black]
target-version = ["py311"]
line-length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=rd_burndown --cov-report=term-missing --cov-fail-under=85"

[tool.coverage.run]
source = ["rd_burndown"]
omit = ["tests/*"]

[tool.coverage.report]
precision = 2
show_missing = true
fail_under = 85
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
skip_covered = false
skip_empty = true

[tool.coverage.html]
directory = "htmlcov"

[tool.pyright]
pythonVersion = "3.11"
pythonPlatform = "Linux"
venvPath = "."
venv = ".venv"
include = ["rd_burndown", "tests"]
exclude = [".venv", "**/__pycache__"]
reportMissingImports = true
reportMissingTypeStubs = false
typeCheckingMode = "basic"

[dependency-groups]
dev = [
    "detect-secrets>=1.5.0",
    "lizard>=1.17.31",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]
